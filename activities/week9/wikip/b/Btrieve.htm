<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="en">
 <head>
  <title>Btrieve</title>
  <meta charset="UTF-8" />
  
  
  <link href="../../disclaimer.htm" rel="copyright" />
  <link rel="stylesheet" href="../../css/en-shared.css" />
  <!--[if IE 6]><link rel="stylesheet" href="../../css/IE60Fixes.css" media="screen" /><![endif]-->
  <!--[if IE 7]><link rel="stylesheet" href="../../css/IE70Fixes.css" media="screen" /><![endif]-->
  <meta content="" name="ResourceLoaderDynamicStyles" />
  <link rel="stylesheet" href="../../css/en-site-vector.css" />
  <style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}.editsection{display:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:79e96594f03002bbea98f74c22274594 */</style>
  <link href="http://schools-wikipedia.org/wp/b/Btrieve.htm" rel="canonical" />
  <meta content="An article about Btrieve hand selected for the Wikipedia for Schools by SOS Children" name="description" />
 </head>
 <body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Btrieve skin-monobook action-view">
  <div id="globalWrapper">
   <div id="column-content">
    <div class="mw-body-primary" id="content" role="main"><a id="top"></a><a id="badge" href="../../disclaimer.htm"><img alt="Checked content" src="../../checked-content.png" width="150" height="70" /></a><h1 class="firstHeading" id="firstHeading" lang="en"><span dir="auto">Btrieve</span></h1>
     <div class="mw-body" id="bodyContent">
      <div id="siteSub">Related subjects: <a href="../index/subject.IT.Software.htm">Software</a></div>
      <!-- start content -->
      <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en"><div class="thumb tleft" id="sitebackground"><div style="width:152px;" class="thumbinner"><h4>Background Information</h4><p>Arranging a Wikipedia selection for schools in the developing world without internet was an initiative by SOS Children. <a href="../../wp/s/Soschildrensvillages.htm">Click here</a> for more information on SOS Children.</p></div></div>
       <p><b>Btrieve</b> is a transactional database (<!--del_lnk--> navigational database) software product. It is based on <!--del_lnk--> Indexed Sequential Access Method (ISAM), which is a way of storing <!--del_lnk--> data for fast retrieval. There have been several versions of the product for <!--del_lnk--> DOS, <a href="../../wp/l/Linux.htm" title="Linux">Linux</a>, older versions of <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Microsoft Windows</a>, <!--del_lnk--> Windows 98, <!--del_lnk--> Windows NT, <a href="../../wp/w/Windows_2000.htm" title="Windows 2000">Windows 2000</a>, <a href="../../wp/w/Windows_XP.htm" title="Windows XP">Windows XP</a>, <!--del_lnk--> Windows Server 2003, 32-bit IBM <!--del_lnk--> OS/2 and for <!--del_lnk--> Novell NetWare.</p>
       <p>It was originally a record manager that was published by SoftCraft, written by Doug Woodward and owned by his brother Loyd Woodward at around the same time as the release of the first <!--del_lnk--> IBM PCs. Doug received 50% of the company as a wedding gift and later purchased the remainder from his brother. After gaining market share and popularity, it was acquired from its founders Doug and Nancy Woodward by Novell in 1987 for integration into their Netware <!--del_lnk--> operating system in addition to continuing with the MS-DOS version. The product gained significant market share as a database embedded in mid-market applications in addition to being embedded in every copy of NetWare 2.x, 3.x and 4.x since it was available on every NetWare network. After some reorganization within Novell, it was decided to spin the product and technology off to the original founders, Doug and Nancy Woodward along with Ron Harris, in 1994 to be developed by a new company known as Btrieve Technologies, Inc. (BTI).</p>
       <p>Btrieve was modularized starting with version 6.15 and became one of two database <!--del_lnk--> front-ends that plugged into a standard <!--del_lnk--> software interface called the <!--del_lnk--> Micro-Kernel Database Engine. The Btrieve front-end supported the Btrieve API and the other front-end was called <!--del_lnk--> Scalable SQL, a <!--del_lnk--> relational database product based upon the MKDE that used its own variety of <!--del_lnk--> Structured Query Language, otherwise known as SQL. After these versions were released (Btrieve 6.15 and ScalableSQL v4) the company was renamed to <!--del_lnk--> Pervasive Software prior to their IPO. Shortly thereafter the Btrieve and ScalableSQL products were combined into the products now known and sold as <!--del_lnk--> Pervasive.SQL or PSQL. Btrieve was continued for a few years while ScalableSQL was quickly discontinued with customers encouraged to upgrade to <!--del_lnk--> Pervasive.SQL which supported both SQL and Btrieve applications.</p>
       <h2> <span class="mw-headline" id="Architecture">Architecture</span></h2>
       <div class="thumb tright">
        <div class="thumbinner" style="width:225px;"><a class="image" href="../../images/1376/137654.png.htm"><img alt="" class="thumbimage" height="134" src="../../images/1376/137654.png"  width="223" /></a><div class="thumbcaption">
          <div class="magnify"><a class="internal" href="../../images/1376/137654.png.htm" title="Enlarge"><img alt="" height="11" src="../../images/1x1white.gif" title="This image is not present because of licensing restrictions" width="15" /></a></div> The MKDE model allows for different database backends to be plugged in to Pervasive's software product.</div>
        </div>
       </div>
       <p>Btrieve is not a <!--del_lnk--> relational database management system (RDBMS). Early descriptions of Btrieve referred to it as a <i>record manager</i> (though Pervasive initially used the term <!--del_lnk--> navigational database but later changed this to transactional database) because it only deals with the underlying record creation, data retrieval, record updating and data deletion primitives. It uses <!--del_lnk--> ISAM as its underlying <!--del_lnk--> indexing and storage mechanism. A key part of Pervasive's architecture is the use of a <!--del_lnk--> MicroKernel Database Engine, which allows different database <!--del_lnk--> backends to be modularised and integrated easily into their DBMS package, <!--del_lnk--> Pervasive.SQL. This has allowed them to support both their Btrieve navigational database engine and an SQL-based engine, Scalable SQL.</p>
       <p>Current versions of Btrieve support <!--del_lnk--> system transactions and user transactions, where system transactions are a bundle of non-transactional operations and/or user transactions, while user transactions are transactions that work on actual data in the database. System transactions were developed to allow multiple transactions to be done in a batch and to allow the ability to recover data more easily.</p>
       <p>The Btrieve file format consists entirely of <!--del_lnk--> pages, which are the data that moves between memory and storage media when the engine performs an I/O operation. Versions prior to 6.0 merely used data pages, index pages and a <!--del_lnk--> file control record (FCR). The file had an index for searching that linked to physical pages. Beginning with version 6.0 logical pages started to be used, which are pages that are mapped to physical pages (pages at a fixed location in the file) on the disk through the use of a set of <!--del_lnk--> page allocation tables (PATs). The FCR is a record that contains important information about Btrieve files, such as the number of pages in current use. In order to avoid corruption in the database Btrieve uses two methods of updating records: <i>pre-image paging</i> in Btrieve versions before 6.0 and <i>shadow paging</i> in subsequent versions. It was mainly the change-over from pre-image paging to shadow-paging that caused radical file format changes that broke compatibility between version 6 and previous versions.</p>
       <h2> <span class="mw-headline" id="History">History</span></h2>
       <p>Btrieve has been owned and developed by three different companies: SoftCraft, Novell and Btrieve Technologies, Inc. (later renamed Pervasive Software). They have a committed and loyal developer-base and in all the company's literature they remain fully committed to the product; in fact Pervasive have set up a "Btrieve Society" to recognise existing developers.</p>
       <p>Under MS-DOS Btrieve up to version 5 was a <!--del_lnk--> Terminate-and-Stay-Resident program which functioned as an <!--del_lnk--> application programming interface (API) <!--del_lnk--> database engine, supplying applications programs with function calls to implement a multi-user database with <!--del_lnk--> record locking; the network version worked in a similar way.</p>
       <p>In the early years MS-DOS versions up to version 5 sold for a relatively high price, of the order of US$1,000, but the executable <!--del_lnk--> Terminate-and-Stay-Resident (TSR) <!--del_lnk--> database engine file could be distributed with applications without payment of any licence fee.</p>
       <h3> <span class="mw-headline" id="SoftCraft_years">SoftCraft years</span></h3>
       <p>The product was launched in February 1982 by SoftCraft, a firm located in <!--del_lnk--> Austin, <!--del_lnk--> Texas, by Doug and Nancy Woodward. Doug became the vice-president and handled software development, and Nancy became the president of the company. They released a number of versions over the next few years: in February 1983 they released the Btrieve 2.x series, and when <!--del_lnk--> MS-DOS 2.x developed support for file and directory handles they released Btrieve 3.0. When MS-DOS 3.1 standardised its internal interfaces in March 1985 they released Btrieve 3.1 C/S one month later, which had <!--del_lnk--> network and <!--del_lnk--> client/server support. In February 1986 Btrieve 4.0 was released, and when the 4.1 upgrade was released it gained support for extended key types and supplemental indexes.</p>
       <p>Although Btrieve was fairly popular, it was an API database engine, while the <!--del_lnk--> killer-app database manager on the PC, <!--del_lnk--> dBase II and its successors, was a <!--del_lnk--> database management system (DBMS) which could be used either as a free-standing general-purpose application or a database programming language. Btrieve was also more expensive to purchase than dBase, although run-time licensing was free of charge. Btrieve grew to a developer base of over 5,000 users and was widely used in the financial area. The company took some time to create a <!--del_lnk--> user-interface for the product, however in 1984 they released <b>Xtrieve</b>, a menu-driven program that used a new <!--del_lnk--> .DDF <!--del_lnk--> data dictionary to enforce <!--del_lnk--> relational database rules.</p>
       <h3> <span class="mw-headline" id="Novell_acquisition">Novell acquisition</span></h3>
       <div class="floatright"><!--del_lnk--> <img alt="Novell Logo.png" height="88" src="../../images/1x1white.gif" title="This image is not present because of licensing restrictions" width="76" /></div>
       <p>In 1987 <!--del_lnk--> Novell started diversifying and buying companies to add to their <!--del_lnk--> NetWare <!--del_lnk--> operating system. One of the companies they purchased was SoftCraft. Nancy Woodward became the Vice-President and General Manager of Novell's Austin operations while Doug Woodward became the Vice-President of Advanced Database Technologies. Early the next year Btrieve 5.0 was released to run as a native NetWare application, or VAP (Value Added Process). According to Jim Kyle, "it had auto-increment key types, the BROUTER network process server, data-only and key-only files, and optional data compression". Version 5.1 was released in 1990 with increased file-handling transaction capability, logging and roll-forward operations, along with several API enhancements. Several versions were created for <!--del_lnk--> DOS, <!--del_lnk--> OS/2 and <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Microsoft Windows</a>. Version 6.0 was released in June 1992, however it was not promoted extensively by Novell, and due to enhancements (such as the change from pre-imaging to shadow-paging) it was incompatible with previous versions of Btrieve. The market did not increase much for Btrieve and it did not see wide adoption due to these issues.</p>
       <p>When the company was acquired by Novell, SoftCraft had been working on a product called <b>XQL</b>, which was an <!--del_lnk--> SQL interpreter that was designed to better deal with industry standard SQL, which the Xtrieve package was not fully compliant with. This became the basis for <b>NetWare SQL</b>, which was initially released in 1989, and was a bare-bones SQL interpreter which implemented the base IBM version of SQL.</p>
       <h3> <span class="mw-headline" id="Btrieve_Technologies.2C_Inc.">Btrieve Technologies, Inc.</span></h3>
       <div class="floatright"><!--del_lnk--> <img alt="Btrieve logo.PNG" height="65" src="../../images/1x1white.gif" title="This image is not present because of licensing restrictions" width="109" /></div>
       <p>By 1994 Novell had largely given up on attempting to make NetWare into a complete alternative operating system, and started selling off many of the companies it had acquired only a few years earlier. They had also done minimal promotion of Btrieve, largely due to the long time (24 months) it took to release version 6. Negotiations between Nancy and Doug Woodward with Novell were entered into and after two years Novell announced (on January 26, 1994) that it was going to transfer ownership of Btrieve to Btrieve Technologies, Incorporated (also known as BTI). On April 29, 1994 the transfer was completed and Nancy Woodward became the <!--del_lnk--> Chairman of BTI and Doug Woodward was made the <!--del_lnk--> Chief Technical Officer. The <!--del_lnk--> CEO position was given to Ron Harris, a former employee of <!--del_lnk--> Texas Instruments, and one of the founding employees of <!--del_lnk--> Citrix Systems, Inc. where he was employed first as Director of Strategic Planning, then as Vice-President of Marketing, and finally as the Product Group Vice President.</p>
       <p>Btrieve was totally rewritten and on July 1, 1994 Btrieve 6.15 was released for DOS, Windows and OS/2. Novell SQL was renamed to <b>Scalable SQL</b> to reflect the change in ownership of the company. In 1995 version 6.15 was released for Novell <!--del_lnk--> NetWare, <!--del_lnk--> Windows NT Server and for Windows NT/<!--del_lnk--> 95, and thus became a <!--del_lnk--> cross-platform database product. The concept of a Micro Kernel Database Engine (MKDE) was introduced in this version.</p>
       <h3> <span class="mw-headline" id="Pervasive_Software">Pervasive Software</span></h3>
       <p>In 1996 the company renamed itself to <!--del_lnk--> Pervasive Software, and their product <!--del_lnk--> Pervasive.SQL . In 1997, the company went public. They did this in order to allow greater penetration of the relational database market and to re-align as an SQL vendor, though they are still marketing and developing Btrieve. Pervasive completed its <!--del_lnk--> IPO in September. The company continued using the MKDE in version 6.30. In 1997 Pervasive released ScalableSQL 4.0, a relational database product, and Btrieve 7.0.</p>
       <p>In 2000, Novell was criticized after it ceased bundling <!--del_lnk--> Pervasive.SQL with NetWare (5.1 was the first version affected). Instead, it shipped with a trial version that shut down after 90-days. The latest version, <!--del_lnk--> Pervasive PSQL Summit v11, was released in September 2010.</p>
       <h2> <span class="mw-headline" id="Versions">Versions</span></h2>
       <h3> <span class="mw-headline" id="Btrieve_for_DOS">Btrieve for DOS</span></h3>
       <p>There was one DOS client-based configuration of Btrieve created by SoftCraft. SoftCraft's definition of a client-based version was a "Btrieve engine running on a particular workstation." This meant that the record-management engine connected directly to the files via operating system functions and modified the records accordingly, whether the files were local or on a network. The client-based engine allowed five <!--del_lnk--> concurrent users to access the database at any one time. All processing of the records was done on the local workstation the engine was installed on. Btrieve for DOS used the SEFS and MEFS modes for file sharing.</p>
       <h3> <span class="mw-headline" id="Btrieve_for_Netware">Btrieve for Netware</span></h3>
       <p>Btrieve for Netware was essentially the same as Btrieve for DOS with some extra features only available on Netware at the time. It ran a server process, called <code>BSERVER</code>, on the file-sharing server and this managed data <!--del_lnk--> I/O in conjunction with the network file system. The server process was first implemented as a Netware <i><!--del_lnk--> Value Added Process</i> (VAP) called <code>BSERVER.VAP</code>, but was switched to a Netware <i><!--del_lnk--> NetWare Loadable Module</i> (NLM) soon after. Basically, <code>BSERVER</code> was the database engine that dealt with access to records, however it also accepted requests from the transmittal of requested data to another server via the <code>BROUTER</code> process.</p>
       <p>Btrieve used <i>requesters</i> to make database I/O requests from the client workstation. These requesters were available for DOS, OS/2, Microsoft Windows, and <!--del_lnk--> UnixWare. The program <code>BREQUEST.EXE</code> accepted I/O requests via the Btrieve API and relayed them to <code>BSERVER</code>. It then handled the responses from <code>BSERVER</code> and relayed them back to the appropriate applications.</p>
       <p>The <code>BROUTER</code> process allowed for incoming requests to be "routed" to a copy of the database on another server. It was loaded on the Netware server and dealt with communication between multiple server processes running on the one file-server through the use of two <i>File Server Tables</i> (FSTs). According to Pervasive, these provide a list of "server names and addresses, and the <i>Server Routing Table</i> (SRT)". BROUTER also allowed communication requests to be routed to the correct server via SPX by looking up the <code>BSPXCOM</code> NLM and coordinated locks and other mechanisms that controlled access to the data in the Btrieve database.</p>
       <p>Btrieve for DOS used the SEFS and MEFS modes for file sharing, and because it was able to run on a network it was able to use exclusive and concurrent transactions.</p>
       <h3> <span class="mw-headline" id="Btrieve_for_Windows">Btrieve for Windows</span></h3>
       <p>Btrieve for Windows was created before the company rewrote the codebase to use the MKDE. It featured SEFS and MEFS file sharing mechanisms; used shadow-paging and allowed for exclusive and concurrent locks. It handled version 6.x and 6.1 files differently: version 6.x files could handle operations on &ldquo;chunks&rdquo; of records rather than locking up the whole record; it handled records that were over 64KB; implemented VATs, ACSs, new data types; allowed for percentage operations (where the record could be located and manipulated by the physical location in the file) and handled duplicate keys. Version 6.x was capable of dropping or adding any index on the fly (version 6.0 and below could only drop supplemental indexes). Version 6.1 files allowed for concurrent and system transactions; the optional renumbering of keys; case insensitive ACS tables and enhanced locking operations.</p>
       <p>Btrieve for Windows could run as a client to the database that utilized SEFS or MEFS modes, or it could directly access the Btrieve server.</p>
       <h4> <span class="mw-headline" id="Client-based_Btrieve">Client-based Btrieve</span></h4>
       <div class="floatright"><a class="image" href="../../images/1376/137664.png.htm"><img alt="Btrieve for Windows 95NT Workstation config.svg" class="thumbborder" height="275" src="../../images/1376/137664.png"  width="250" /></a></div>
       <p>The client-based version of Btrieve has all the database files either directly on the local computer or via a mapped network drive (setup using DOS&rsquo;s <code>NET USE</code> command).</p>
       <p>Applications make a function call to <code>WBTRCALL.DLL</code>, a loader and requester interface. The loader and requester module checks the <code>BTI.INI</code> configuration file is correctly setup to load the client-based Btrieve engine. In turn, this loads the local interface to the btrieve engine (<code>WBTRLOCL.DLL</code>). If necessary, this local interface loads the Btrieve engine (<code>WBTR32.EXE</code>) into memory and sends the necessary database requests to it. The database engine then calls various Win32 system libraries to perform file operations on the database files.</p>
       <h4> <span class="mw-headline" id="Client-based_Btrieve_accessing_server-based_Btrieve">Client-based Btrieve accessing server-based Btrieve</span></h4>
       <p>The client-based version of Btrieve for Windows could access server-based versions of Btrieve via a DOS-based "requester". The requestor required the use of <!--del_lnk--> DOS Protected Mode Interface (DPMI) which allows the program access to DOS's <!--del_lnk--> extended memory which could only accessed using the <!--del_lnk--> Protected Mode functionality of the CPU's <!--del_lnk--> x86 architecture.</p>
       <p>As with the client-based interface, the Btrieve-based application makes a call to the <code>WBTRCALL.DLL</code> loader and requester interface library. This library checks the <code>BTI.INI</code> file to see if it needs to access data on the local system or whether it needs to access data on a remote server. If it needs to access the server then it uses the Windows version of DPMI to access a DOS-based requester named <code>BREQUEST.EXE</code>. The requester then establishes a network connection to the server, which processes the request and passes back a message to the requester when the database request is completed.</p>
       <h3> <span class="mw-headline" id="Btrieve_for_Windows_NT.2FWindows_95">Btrieve for Windows NT/Windows 95</span></h3>
       <p>Btrieve for Windows NT and Windows 95 was released in 1995 along with Btrieve for Netware and Btrieve for Windows NT Server. It had reached version 6.15 and started using the <!--del_lnk--> MKDE. The file sharing mechanisms remained the same as it still used SEFS and MEFS file sharing modes; used shadow-paging and allowed for exclusive and concurrent locks. This version of Btrieve allowed for <!--del_lnk--> null values in keys, which meant that a record could be entered into the database when information on the key was not available. It meant that the key would not be included into the index, and this helped decrease unnecessary searching of the database via the index. It also introduced the concept of a <i>system transaction</i> and a <i>user transaction</i>. (see <i><!--del_lnk--> System and user transactions</i>). The MKDE also allowed gaps between auto-incremented keys. <!--del_lnk--> Variable-tail allocation tables were introduced in version 6.15, so they were included in the Windows NT/95 build of Btrieve.</p>
       <p>There are two configurations of Btrieve for Windows NT/95: standalone workstation and client/server.</p>
       <h4> <span class="mw-headline" id="Standalone_Workstation">Standalone Workstation</span></h4>
       <div class="floatright"><a class="image" href="../../images/1376/137664.png.htm"><img alt="Btrieve for Windows 95NT Workstation config.svg" class="thumbborder" height="275" src="../../images/1376/137664.png"  width="250" /></a></div>
       <p>When using the <i>standalone workstation</i> configuration of Btrieve, all processing of records is done on the local <!--del_lnk--> workstation. The workstation relies on the underlying mechanisms of Windows to allow the MKDE (the <code>W32MKDE.EXE</code> program) to gain direct access to the database files, and uses lock files to deal with concurrency issues.</p>
       <p>In this configuration the application makes calls to the Btrieve API, or Microkernel Interface (<code>WBTRV32.DLL</code>). The call is then processed by this interface and passed along to the MKDE (<code>W32MKDE.EXE</code>) which then uses the underlying operating system <!--del_lnk--> file system (whether it be network or local) to directly access the database files.</p>
       <p>This leads to some peculiar issues. If Btrieve uses <!--del_lnk--> Windows file sharing and has the database engine open files directly on a file share, for instance, and there is network instability (or even if a network cable is unplugged) during an update the fields used to link one Btrieve file to another can become unsynchronized (to all intents and purposes the data loses its relationships or links to other data) and the database file itself can get corrupted (though the chance of this is reduced due to pre-image paging).</p>
       <h4> <span class="mw-headline" id="Client.2FServer">Client/Server</span></h4>
       <div class="floatright"><a class="image" href="../../images/1376/137669.png.htm"><img alt="MKDE server.svg" class="thumbborder" height="208" src="../../images/1376/137669.png"  width="500" /></a></div>
       <p>When using the <i>client/server</i> (or <i>Server edition</i>) configuration of Btrieve, processing of records is generally done on a Windows file server via a mapped drive (a way of mapping a file share to a "virtual" disk drive in Windows via the <code>NET USE</code> command). It utilises the permissions that you are assigned when authenticating, either from when logging on or via the permissions given for the <code>NET USE</code> is utilised.</p>
       <p>On Windows 95 the MKDE interface (a Windows <!--del_lnk--> dynamic link library (DLL) called <code>WBTRV32.DLL</code>) actually determines what database access method is in use via the configuration file. If it detects that both the client/server and workstation engines are installed on the one machine it checks whether the target is set to workstation or server. If running on Windows NT and the server process <code>NTMKDE.EXE</code> is running along with the standalone workstation process <code>W32MKDE.EXE</code> it looks in the registry to determine if the target is either server or workstation. In both cases, if the MKDE interface is set to workstation (the "Standalone workstation" configuration) it uses the MKDE (<code>W32MKDE.EXE</code>) to directly access the file. If it is set to server then the MKDE interface on the client uses a communications module (on <!--del_lnk--> Windows 95 this is <code>W32BTICM.DLL</code>, on <!--del_lnk--> Windows NT this is <code>NTBTICM.DLL</code>) that "talks" to the <!--del_lnk--> server. The server itself has its own matching communications module (again either <code>W32BTICM.DLL</code> or <code>NTBTICM.DLL</code>) that resides on the mapped drive. The server DLL then communicates with the server MKDE (<code>NTMKDE.EXE</code>) which updates records, then sends a confirmation that the operation succeeded back through the communications module to the client.</p>
       <p>The advantage of this system is that if a network connection failure occurs the MKDE on the server will be able to detect this and recover in a more graceful manner than the workstation configuration is able to.</p>
       <h4> <span class="mw-headline" id="Configuration">Configuration</span></h4>
       <p>A configuration utility was included with Btrieve to alter MKDE settings. The settings that could be changed were:</p>
       <ul>
        <li><b>File settings:</b> this category contains settings related to files, file handles, record locks, indexes, and log files. The number of open files and logical file handles was set in here, as well as the number of record locks per client; index balancing and an option to create files in pre 6.x format are in this category. It also controlled whether the Microkernel kept a log of operations executed on selected files. In this section the method of file sharing could be set to either MEFS or SEFS. The system transaction hold limit sets the number of system transactions performed during write operations for shared files.</li>
        <li><b>Memory organisation:</b> this category contained settings related to the size of buffers the Microkernel needed to allocate for various purposes.</li>
        <li><b>Client/System transactions:</b> this category contains settings related to transactions, including the number supported and how and when they will be logged.</li>
        <li><b>System resources/directories:</b> this category contains settings related to the number of clients and threads supported as well as the location of various system files.</li>
        <li><b>Trace operations:</b> this category contains settings related to tracing various Btrieve operations. Tracing is an advanced feature used mainly for <!--del_lnk--> debugging purposes.</li>
       </ul>
       <h3> <span class="mw-headline" id="Pervasive.SQL_7">Pervasive.SQL 7</span></h3>
       <p><!--del_lnk--> Pervasive.SQL 7 was released in March, 1998, and included Scalable SQL 4 and Btrieve 7.0. Btrieve 7.0 ran on the same platforms as Btrieve 6.x: Windows 95, Windows NT 3.51 &amp; 4, Netware and DOS. However, the company changed to a component-based architecture called SmartComponents to resolve compatibility issues with upgrades. This used a component identification scheme both embedded into the file and encoded into the file name, along with dynamic binding of "glue files" (<!--del_lnk--> DLLs loaded into memory only when needed). The dynamic binding of components was done using a new "Abstract OS Services DLL" that looked for the latest version of the appropriate needed component via the file name encoding. This "glue module" is then loaded into memory and used. The old log file format of Btrieve 6.x was also replaced with a new centralised log called <code>PVSW.LOG</code> and that had a unified and enhanced log file format. They also improved their error messages and error message reporting mechanisms.</p>
       <p>The MKDE was retained in <!--del_lnk--> Pervasive.SQL 7. However, due to the new component architecture's dynamic binding, the internal architecture was modified. The application using Btrieve calls a services manager which then searches through various configured directories for specific encoded filename. The file name loaded for Btrieve files in <!--del_lnk--> Backus-Naur form is:</p><pre>
<filename> ::= <platform-code> "BIF" <major-functional-level> <minor-functional-level>
<platform-code> ::= "W1" | "W2" | "W3" | "W9" | "WT" | "NW" | "O3"
<major-functional-level> ::= <number>
<minor-functional-level> ::= <number> <number>
<number> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
</pre><table class="wikitable">
        <caption>Embedded filename platform codes</caption>
        <tr bgcolor="#CCCCCC">
         <th><b>Code</b></th>
         <th><b>Platform</b></th>
        </tr>
        <tr>
         <td>W1</td>
         <td><!--del_lnk--> Windows 3.1x, incl. Windows for Workgroups (Win16)</td>
        </tr>
        <tr>
         <td>W2</td>
         <td>Extended Windows (32-bit <!--del_lnk--> Watcom Extender)</td>
        </tr>
        <tr>
         <td>W3</td>
         <td>Windows 95, Windows NT (Win32)</td>
        </tr>
        <tr>
         <td>W9</td>
         <td>Windows 95</td>
        </tr>
        <tr>
         <td>WT</td>
         <td>Windows NT</td>
        </tr>
        <tr>
         <td>NW</td>
         <td>Netware 3.x and 4.x</td>
        </tr>
        <tr>
         <td>O3</td>
         <td>OS/2 (32-bit)</td>
        </tr>
       </table>
       <p>The "glue" module, which is a DLL, is loaded into memory and becomes the interface to the MKDE. The MKDE then determines whether it is configured to be a workstation based configuration or a server based configuration. It then passes requests via its communications "requester" module onto the database server, or directly modifies the database files if configured in workstation mode.</p>
       <h3> <span class="mw-headline" id="Pervasive.SQL_2000.2F2000i">Pervasive.SQL 2000/2000i</span></h3>
       <p><!--del_lnk--> Pervasive.SQL 2000 and <!--del_lnk--> Pervasive.SQL 2000i uses essentially the same architecture as <!--del_lnk--> Pervasive.SQL 7, though 2000i includes i*Net server. It uses the same component model, has the ability to use the Btrieve or Scalable SQL engines and continues using an MKDE. This version included support for <!--del_lnk--> Red Hat Linux, <!--del_lnk--> Caldera OpenLinux, <!--del_lnk--> SUSE and <!--del_lnk--> Solaris. It also had better integration with <!--del_lnk--> Terminal Services, though only one instance of the database engine may run on any terminal server platform. You cannot run separate copies of the database engine within two or more terminal sessions.</p>
       <h3> <span class="mw-headline" id="Pervasive.SQL_V8">Pervasive.SQL V8</span></h3>
       <p>Introduced in December 2002, <!--del_lnk--> Pervasive.SQL V8 improves the performance of both Btrieve and SQL applications using a number of new technologies.</p>
       <ul>
        <li>Client side caching greatly improves read performance by maintaining a portion of the database's contents on the local PC.</li>
        <li>Turbo Write Acceleration (TWA) groups disk writes into groups, minimizing interactions with disk.</li>
        <li>Transaction Logging provides a slightly less failure protection than transaction durability, but improves overall performance.</li>
       </ul>
       <p>The V8 Security Feature Pack (a mid-release product update designated 8.5) added important new security features designed to lock down <!--del_lnk--> Pervasive.SQL data files. Prior to 8.5, access to Btrieve data was controlled by the operating system's security mechanism. This meant that any user who needed read/write access to the database, also needed read/write access to the underlying data files. 8.5 introduced new security models, which allow administrators to control access to the Btrieve data using database security. Once activated, database security no longer requires that the user has access to the underlying files. In addition, client/server configurations no longer require the use of network shares or mapped drives. Applications can reference secure Btrieve data using a URI connection string.</p>
       <h3> <span class="mw-headline" id="Pervasive_PSQL_v9">Pervasive PSQL v9</span></h3>
       <p><!--del_lnk--> Pervasive PSQL v9 includes new Java GUIs, built on the Eclipse framework. These GUIs are available for both Microsoft Windows and Linux. In addition, v9 included many SQL performance and syntax updates, improving both the speed and flexibility of all of the SQL interfaces - ADO.Net, JDBC, ODBC, and OLE DB. Finally, PSQL v9 expanded the Btrieve maximum file size from 64GB in 8.x and earlier file formats to 128 GB in 9.0 format files, and again to 256GB for files in the 9.5 file format.</p>
       <p>In conjunction with PSQL v9 Pervasive reintroduced the DDF Builder utility and added support for text searching with the Full Text Search (FTS) add-on, which was later removed from the product line. DDF Builder provides a mechanism for Btrieve users to define the meta data for existing Btrieve files, thus allowing Btrieve data to be accessible via SQL tools and utilities.</p>
       <p>All versions of the MKDE retain full backward read-level compatibility with earlier versions of Btrieve, including those that pre-date introduction of the MKDE itself, and do not change the file's version unless specifically requested to do so. Btrieve files that are in the 5.x or older file formats MUST be rebuilt (using the GUI or command line Rebuild utilities) to 6.x or newer format to support database writes from the 9.0 or newer database engine.</p>
       <h3> <span class="mw-headline" id="Pervasive_PSQL_v10">Pervasive PSQL v10</span></h3>
       <p><!--del_lnk--> Pervasive PSQL v10 was released in September 2007 and was the first version of <!--del_lnk--> Pervasive PSQL Server and Client to provide support for 64-bit operating systems. The Btrieve API and distributing tuning interface (DTI) were both enhanced to support 64-bit. <!--del_lnk--> Pervasive PSQL Workgroup and other components of the SDK were not enhanced for 64-bit support.</p>
       <p>The release of <!--del_lnk--> Pervasive PSQL v10 was timed to offer support for the then newly available Windows Vista and soon to arrive Windows Server 2008 operating systems. <!--del_lnk--> Pervasive PSQL v10 Server, Workgroup and Client all support Windows Vista. <!--del_lnk--> Pervasive PSQL v10 Server is Certified for Windows Server 2008.</p>
       <p>Also included in <!--del_lnk--> Pervasive PSQL v10 was Xtreme I/O (XIO), a 32-bit Windows database accelerator that enabled access of extended memory to expand the database cached past the normal 2GB limit on 32-bit Windows systems. XIO also included update compression algorithms and streamlined writing techniques to improve database I/O performance.</p>
       <p>Digital license enforcement, called Product Authorization, was introduced for the <!--del_lnk--> Pervasive PSQL product line with <!--del_lnk--> Pervasive PSQL v10. Product Authorization was initially implemented with trial downloads and e-commerce orders. Products sold through the Pervasive Distributor and ISV partners were upgrade to include product authorization with the release of <!--del_lnk--> Pervasive PSQL v10 SP3 in November 2009. <!--del_lnk--> Pervasive PSQL v10 SP3 was also released as a Windows 7 compatible application.</p>
       <p><!--del_lnk--> Pervasive PSQL v10 retained backward compatibility by using the 9.5 file format with an increase in the maximum data file size to 256GB and increase in the maximum page size to 16,384 bytes.</p>
       <p>Support for NetWare, Windows NT, Windows 98, Windows ME, DOS 6.22 and 16-bit applications were dropped with <!--del_lnk--> Pervasive PSQL v10. Although the Windows and Linux versions of <!--del_lnk--> Pervasive PSQL v9 products are no longer sold, Pervasive still sells and supports <!--del_lnk--> Pervasive PSQL v9 for NetWare.</p>
       <p>In 2010, Pervasive Software released <!--del_lnk--> Pervasive PSQL v11, which allows users to take full advantage of multithreading for faster database processing.</p>
       <h3> <span class="mw-headline" id="Pervasive_PSQL_v11">Pervasive PSQL v11</span></h3>
       <p><!--del_lnk--> Pervasive PSQL v11 was released in September 2010. One of the key drivers of the engineering effort behind <!--del_lnk--> Pervasive PSQL v11 was the redesign of the database engine to increase performance and scalability on multi-core CPU's. <!--del_lnk--> Pervasive PSQL v11 optimizes parallel threads performing similar activities, allowing the database to engage multiple cores during task execution. PSQL v11 also provides enhancements to the low-level synchronization mechanisms in the navigational interface. Multiple users can read the same cached file pages simultaneously and their operations can proceed on independent cores. Non-user activity such as checkpoints and log management can run on separate cores and multiple users accessing independent files can proceed on different cores.</p>
       <p>Multi-core support is available with all versions of PSQL v11: 32- and 64-bit Windows and Linux Servers, and 32-bit Workgroup. Internal testing at Pervasive documented performance increases of 300% when comparing PSQL v10 to PSQL v11 on a 8-core server running Microsoft 2008 Enterprise Server SP2(64-bit).</p>
       <p>(<!--del_lnk--> IPv6) support on Windows is included in Pervsive PSQL v11 with continued support for IPv4 environments. <!--del_lnk--> Pervasive PSQL v11 supports IPv6 with both the Btrieve and DTI (Distributed Tuning Interface) access methods.</p>
       <p>64-bit server versions of PSQL v11 include a 64-bit relational/SQL engine as well as the 64-bit navigational/Btrieve engine, along with a 64-bit ODBC driver. The driver is installed with the 64-bit versions of PSQL Server and PSQL Client.</p>
       <p>Pervasive updated the PSQL software development kit with the addition of the <!--del_lnk--> Pervasive PSQL ADO.NET Data Provider 3.5. The Data Provider 3.5 is compliant with .NET Framework versions 2.0, 3.0, 3.5, 3.5 SP1 and 4.0, and runs under .NET Framework 4.0 with support for Entity Framework 1.0 features. <!--del_lnk--> Pervasive PSQL v11 also updated the PDAC (Pervasive Direct Access Components) access method with support for Embardacero's RAD Studio 2009 and RAD Studio 2010.</p>
       <p>Product Authorization was extended in <!--del_lnk--> Pervasive PSQL v11 to include OEM customers, along with the introduction of a web based portal for OEM's to generate keys and manage licenses for PSQL v11. Telephone authorization (a method of authorizing <!--del_lnk--> Pervasive PSQL without requiring an Internet connection) was first introduced with PSQL v11 and made available to all Pervasive customers.</p>
       <p><!--del_lnk--> Pervasive PSQL v11 continues with the 9.5 file format, maintaining backward compatibility with previous releases.</p>
       <p>Support for Windows 2000 was dropped with <!--del_lnk--> Pervasive PSQL v11.</p>
       <h3> <span class="mw-headline" id="Pervasive_PSQL_Ecosystem">Pervasive PSQL Ecosystem</span></h3>
       <p>Pervasive now offers a number of add-on products which extend the basic features of the PSQL DBMS. The latest versions of each of the products, AuditMaster v7, Backup Agent v3, and DataExchange v4, were released in December 2010.</p>
       <ul>
        <li>Pervasive AuditMaster provides real-time auditing of all database interactions, whether Btrieve or SQL. Logs of data events can be queried to track changes to sensitive data. Alerts can also be created to notify the appropriate personnel or launch the associated process.</li>
        <li>Pervasive Backup Agent manages PSQL's continuous operations mode and allows backup software to reliably copy online databases.</li>
        <li>Pervasive DataExchange provides data synchronization and replication between two or more PSQL engines, ensuring that critical data is always available.</li>
       </ul>
      </div>
      <div class="printfooter"> Retrieved from "<!--del_lnk--> http://en.wikipedia.org/w/index.php?title=Btrieve&amp;oldid=541160380"</div>
      <!-- end content -->
      <div class="visualClear">
      </div>
     </div>
    </div>
   </div>
   <div id="column-one">
<div id="logo"><a href="../../index.htm"><img src="../../schools-wikipedia-logo.png" alt="Wikipedia for Schools" /></a></div>
<div class="menu">
<p class="sosheading"><a href="../../wp/index/subject.htm">Subjects</a></p>
<p><a href="../../wp/index/subject.Art.htm">Art</a></p>
<p><a href="../../wp/index/subject.Business_Studies.htm">Business Studies</a></p>
<p><a href="../../wp/index/subject.Citizenship.htm">Citizenship</a></p>
<p><a href="../../wp/index/subject.Countries.htm">Countries</a></p>
<p><a href="../../wp/index/subject.Design_and_Technology.htm">Design and Technology</a></p>
<p><a href="../../wp/index/subject.Everyday_life.htm">Everyday life</a></p>
<p><a href="../../wp/index/subject.Geography.htm">Geography</a></p>
<p><a href="../../wp/index/subject.History.htm">History</a></p>
<p><a href="../../wp/index/subject.IT.htm">Information Technology</a></p>
<p><a href="../../wp/index/subject.Language_and_literature.htm">Language and literature</a></p>
<p><a href="../../wp/index/subject.Mathematics.htm">Mathematics</a></p>
<p><a href="../../wp/index/subject.Music.htm">Music</a></p>
<p><a href="../../wp/index/subject.People.htm">People</a></p>
<p><a href="../../wp/index/subject.Portals.htm">Portals</a></p>
<p><a href="../../wp/index/subject.Religion.htm">Religion</a></p>
<p><a href="../../wp/index/subject.Science.htm">Science</a></p>
<p style="margin-top: 10px;" class="sosheading"><a rel="nofollow" href="../../wp/index/alpha.htm">Title Word Index</a></p>
</div>
</div>

   <div class="visualClear">
   </div>
   <div id="sosebar">
    <div class="center"> Wikipedia for Schools is a selection taken from the original English-language Wikipedia by the child sponsorship charity <a rel="author" href="../../wp/s/Soschildrensvillages.htm">SOS Children</a>. It was created as a <a href="../../wp/w/Wikipedia_For_Schools.htm">checked and child-friendly teaching resource</a> for use in schools in the developing world and beyond.Sources and authors can be found at www.wikipedia.org. See also our <a href="../../disclaimer.htm"><strong>Disclaimer</strong></a>. These articles are available under the <a href="../../wp/w/Wikipedia%253AText_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License.htm"> Creative Commons Attribution Share-Alike Version 3.0 Unported Licence</a>. This article was sourced from http://en.wikipedia.org/?oldid=541160380 . </div>
   </div>
  </div>
 </body>
</html>